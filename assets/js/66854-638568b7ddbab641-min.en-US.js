(globalThis.webpackChunkextract_css=globalThis.webpackChunkextract_css||[]).push([["66854"],{28845:function(K,fe,A){const Q=A(355943),U=A(629062),{isPlainObject:q}=A(682563),L=A(864008),j=A(660073),{parse:_}=A(775874),ee=["img","audio","video","picture","svg","object","map","iframe","embed"],te=["script","style"];function R(d,t){d&&Object.keys(d).forEach(function(w){t(d[w],w)})}function y(d,t){return{}.hasOwnProperty.call(d,t)}function G(d,t){const w=[];return R(d,function(l){t(l)&&w.push(l)}),w}function ne(d){for(const t in d)if(y(d,t))return!1;return!0}function re(d){return d.map(function(t){if(!t.url)throw new Error("URL missing");return t.url+(t.w?` ${t.w}w`:"")+(t.h?` ${t.h}h`:"")+(t.d?` ${t.d}x`:"")}).join(", ")}K.exports=E;const se=/^[^\0\t\n\f\r /<=>]+$/;function E(d,t,w){if(d==null)return"";typeof d=="number"&&(d=d.toString());let l="",m="";function v(e,r){const n=this;this.tag=e,this.attribs=r||{},this.tagPosition=l.length,this.text="",this.mediaChildren=[],this.updateParentNodeText=function(){if(u.length){const s=u[u.length-1];s.text+=n.text}},this.updateParentNodeMediaChildren=function(){u.length&&ee.includes(this.tag)&&u[u.length-1].mediaChildren.push(this.tag)}}t=Object.assign({},E.defaults,t),t.parser=Object.assign({},le,t.parser);const P=function(e){return t.allowedTags===!1||(t.allowedTags||[]).indexOf(e)>-1};te.forEach(function(e){P(e)&&!t.allowVulnerableTags&&console.warn(`

\u26A0\uFE0F Your \`allowedTags\` option includes, \`${e}\`, which is inherently
vulnerable to XSS attacks. Please remove it from \`allowedTags\`.
Or, to disable this warning, add the \`allowVulnerableTags\` option
and ensure you are accounting for this risk.

`)});const ie=t.nonTextTags||["script","style","textarea","option"];let f,M;t.allowedAttributes&&(f={},M={},R(t.allowedAttributes,function(e,r){f[r]=[];const n=[];e.forEach(function(s){typeof s=="string"&&s.indexOf("*")>=0?n.push(U(s).replace(/\\\*/g,".*")):f[r].push(s)}),n.length&&(M[r]=new RegExp("^("+n.join("|")+")$"))}));const O={},$={},I={};R(t.allowedClasses,function(e,r){if(f&&(y(f,r)||(f[r]=[]),f[r].push("class")),O[r]=e,Array.isArray(e)){const n=[];O[r]=[],I[r]=[],e.forEach(function(s){typeof s=="string"&&s.indexOf("*")>=0?n.push(U(s).replace(/\\\*/g,".*")):s instanceof RegExp?I[r].push(s):O[r].push(s)}),n.length&&($[r]=new RegExp("^("+n.join("|")+")$"))}});const F={};let z;R(t.transformTags,function(e,r){let n;typeof e=="function"?n=e:typeof e=="string"&&(n=E.simpleTransform(e)),r==="*"?z=n:F[r]=n});let h,u,S,C,T,D,N=!1;V();const W=new Q.Parser({onopentag:function(e,r){if(t.enforceHtmlBoundary&&e==="html"&&V(),T){D++;return}const n=new v(e,r);u.push(n);let s=!1;const p=!!n.text;let g;if(y(F,e)&&(g=F[e](e,r),n.attribs=r=g.attribs,g.text!==void 0&&(n.innerText=g.text),e!==g.tagName&&(n.name=e=g.tagName,C[h]=g.tagName)),z&&(g=z(e,r),n.attribs=r=g.attribs,e!==g.tagName&&(n.name=e=g.tagName,C[h]=g.tagName)),(!P(e)||t.disallowedTagsMode==="recursiveEscape"&&!ne(S)||t.nestingLimit!=null&&h>=t.nestingLimit)&&(s=!0,S[h]=!0,(t.disallowedTagsMode==="discard"||t.disallowedTagsMode==="completelyDiscard")&&ie.indexOf(e)!==-1&&(T=!0,D=1),S[h]=!0),h++,s){if(t.disallowedTagsMode==="discard"||t.disallowedTagsMode==="completelyDiscard")return;m=l,l=""}l+="<"+e,e==="script"&&(t.allowedScriptHostnames||t.allowedScriptDomains)&&(n.innerText=""),(!f||y(f,e)||f["*"])&&R(r,function(c,a){if(!se.test(a)){delete n.attribs[a];return}if(c===""&&!t.allowedEmptyAttributes.includes(a)&&(t.nonBooleanAttributes.includes(a)||t.nonBooleanAttributes.includes("*"))){delete n.attribs[a];return}let B=!1;if(!f||y(f,e)&&f[e].indexOf(a)!==-1||f["*"]&&f["*"].indexOf(a)!==-1||y(M,e)&&M[e].test(a)||M["*"]&&M["*"].test(a))B=!0;else if(f&&f[e]){for(const i of f[e])if(q(i)&&i.name&&i.name===a){B=!0;let o="";if(i.multiple===!0){const k=c.split(" ");for(const x of k)i.values.indexOf(x)!==-1&&(o===""?o=x:o+=" "+x)}else i.values.indexOf(c)>=0&&(o=c);c=o}}if(B){if(t.allowedSchemesAppliedToAttributes.indexOf(a)!==-1&&Z(e,c)){delete n.attribs[a];return}if(e==="script"&&a==="src"){let i=!0;try{const o=X(c);if(t.allowedScriptHostnames||t.allowedScriptDomains){const k=(t.allowedScriptHostnames||[]).find(function(b){return b===o.url.hostname}),x=(t.allowedScriptDomains||[]).find(function(b){return o.url.hostname===b||o.url.hostname.endsWith(`.${b}`)});i=k||x}}catch{i=!1}if(!i){delete n.attribs[a];return}}if(e==="iframe"&&a==="src"){let i=!0;try{const o=X(c);if(o.isRelativeUrl)i=y(t,"allowIframeRelativeUrls")?t.allowIframeRelativeUrls:!t.allowedIframeHostnames&&!t.allowedIframeDomains;else if(t.allowedIframeHostnames||t.allowedIframeDomains){const k=(t.allowedIframeHostnames||[]).find(function(b){return b===o.url.hostname}),x=(t.allowedIframeDomains||[]).find(function(b){return o.url.hostname===b||o.url.hostname.endsWith(`.${b}`)});i=k||x}}catch{i=!1}if(!i){delete n.attribs[a];return}}if(a==="srcset")try{let i=j(c);if(i.forEach(function(o){Z("srcset",o.url)&&(o.evil=!0)}),i=G(i,function(o){return!o.evil}),i.length)c=re(G(i,function(o){return!o.evil})),n.attribs[a]=c;else{delete n.attribs[a];return}}catch{delete n.attribs[a];return}if(a==="class"){const i=O[e],o=O["*"],k=$[e],x=I[e],b=$["*"],J=[k,b].concat(x).filter(function(de){return de});if(i&&o?c=Y(c,L(i,o),J):c=Y(c,i||o,J),!c.length){delete n.attribs[a];return}}if(a==="style"){if(t.parseStyleAttributes)try{const i=_(e+" {"+c+"}",{map:!1}),o=oe(i,t.allowedStyles);if(c=ae(o),c.length===0){delete n.attribs[a];return}}catch{typeof window<"u"&&console.warn('Failed to parse "'+e+" {"+c+`}", If you're running this in a browser, we recommend to disable style parsing: options.parseStyleAttributes: false, since this only works in a node environment due to a postcss dependency, More info: https://github.com/apostrophecms/sanitize-html/issues/547`),delete n.attribs[a];return}else if(t.allowedStyles)throw new Error("allowedStyles option cannot be used together with parseStyleAttributes: false.")}l+=" "+a,c&&c.length?l+='="'+H(c,!0)+'"':t.allowedEmptyAttributes.includes(a)&&(l+='=""')}else delete n.attribs[a]}),t.selfClosing.indexOf(e)!==-1?l+=" />":(l+=">",n.innerText&&!p&&!t.textFilter&&(l+=H(n.innerText),N=!0)),s&&(l=m+H(l),m="")},ontext:function(e){if(T)return;const r=u[u.length-1];let n;if(r&&(n=r.tag,e=r.innerText!==void 0?r.innerText:e),t.disallowedTagsMode==="completelyDiscard"&&!P(n))e="";else if((t.disallowedTagsMode==="discard"||t.disallowedTagsMode==="completelyDiscard")&&(n==="script"||n==="style"))l+=e;else{const s=H(e,!1);t.textFilter&&!N?l+=t.textFilter(s,n):N||(l+=s)}if(u.length){const s=u[u.length-1];s.text+=e}},onclosetag:function(e,r){if(T)if(D--,!D)T=!1;else return;const n=u.pop();if(!n)return;if(n.tag!==e){u.push(n);return}T=t.enforceHtmlBoundary?e==="html":!1,h--;const s=S[h];if(s){if(delete S[h],t.disallowedTagsMode==="discard"||t.disallowedTagsMode==="completelyDiscard"){n.updateParentNodeText();return}m=l,l=""}if(C[h]&&(e=C[h],delete C[h]),t.exclusiveFilter&&t.exclusiveFilter(n)){l=l.substr(0,n.tagPosition);return}if(n.updateParentNodeMediaChildren(),n.updateParentNodeText(),t.selfClosing.indexOf(e)!==-1||r&&!P(e)&&["escape","recursiveEscape"].indexOf(t.disallowedTagsMode)>=0){s&&(l=m,m="");return}l+="</"+e+">",s&&(l=m+H(l),m=""),N=!1}},t.parser);return W.write(d),W.end(),l;function V(){l="",h=0,u=[],S={},C={},T=!1,D=0}function H(e,r){return typeof e!="string"&&(e=e+""),t.parser.decodeEntities&&(e=e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;"),r&&(e=e.replace(/"/g,"&quot;"))),e=e.replace(/&(?![a-zA-Z0-9#]{1,20};)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;"),r&&(e=e.replace(/"/g,"&quot;")),e}function Z(e,r){for(r=r.replace(/[\x00-\x20]+/g,"");;){const p=r.indexOf("<!--");if(p===-1)break;const g=r.indexOf("-->",p+4);if(g===-1)break;r=r.substring(0,p)+r.substring(g+3)}const n=r.match(/^([a-zA-Z][a-zA-Z0-9.\-+]*):/);if(!n)return r.match(/^[/\\]{2}/)?!t.allowProtocolRelative:!1;const s=n[1].toLowerCase();return y(t.allowedSchemesByTag,e)?t.allowedSchemesByTag[e].indexOf(s)===-1:!t.allowedSchemes||t.allowedSchemes.indexOf(s)===-1}function X(e){if(e=e.replace(/^(\w+:)?\s*[\\/]\s*[\\/]/,"$1//"),e.startsWith("relative:"))throw new Error("relative: exploit attempt");let r="relative://relative-site";for(let p=0;p<100;p++)r+=`/${p}`;const n=new URL(e,r);return{isRelativeUrl:n&&n.hostname==="relative-site"&&n.protocol==="relative:",url:n}}function oe(e,r){if(!r)return e;const n=e.nodes[0];let s;return r[n.selector]&&r["*"]?s=L(r[n.selector],r["*"]):s=r[n.selector]||r["*"],s&&(e.nodes[0].nodes=n.nodes.reduce(ce(s),[])),e}function ae(e){return e.nodes[0].nodes.reduce(function(r,n){return r.push(`${n.prop}:${n.value}${n.important?" !important":""}`),r},[]).join(";")}function ce(e){return function(r,n){return y(e,n.prop)&&e[n.prop].some(function(p){return p.test(n.value)})&&r.push(n),r}}function Y(e,r,n){return r?(e=e.split(/\s+/),e.filter(function(s){return r.indexOf(s)!==-1||n.some(function(p){return p.test(s)})}).join(" ")):e}}const le={decodeEntities:!0};E.defaults={allowedTags:["address","article","aside","footer","header","h1","h2","h3","h4","h5","h6","hgroup","main","nav","section","blockquote","dd","div","dl","dt","figcaption","figure","hr","li","main","ol","p","pre","ul","a","abbr","b","bdi","bdo","br","cite","code","data","dfn","em","i","kbd","mark","q","rb","rp","rt","rtc","ruby","s","samp","small","span","strong","sub","sup","time","u","var","wbr","caption","col","colgroup","table","tbody","td","tfoot","th","thead","tr"],nonBooleanAttributes:["abbr","accept","accept-charset","accesskey","action","allow","alt","as","autocapitalize","autocomplete","blocking","charset","cite","class","color","cols","colspan","content","contenteditable","coords","crossorigin","data","datetime","decoding","dir","dirname","download","draggable","enctype","enterkeyhint","fetchpriority","for","form","formaction","formenctype","formmethod","formtarget","headers","height","hidden","high","href","hreflang","http-equiv","id","imagesizes","imagesrcset","inputmode","integrity","is","itemid","itemprop","itemref","itemtype","kind","label","lang","list","loading","low","max","maxlength","media","method","min","minlength","name","nonce","optimum","pattern","ping","placeholder","popover","popovertarget","popovertargetaction","poster","preload","referrerpolicy","rel","rows","rowspan","sandbox","scope","shape","size","sizes","slot","span","spellcheck","src","srcdoc","srclang","srcset","start","step","style","tabindex","target","title","translate","type","usemap","value","width","wrap","onauxclick","onafterprint","onbeforematch","onbeforeprint","onbeforeunload","onbeforetoggle","onblur","oncancel","oncanplay","oncanplaythrough","onchange","onclick","onclose","oncontextlost","oncontextmenu","oncontextrestored","oncopy","oncuechange","oncut","ondblclick","ondrag","ondragend","ondragenter","ondragleave","ondragover","ondragstart","ondrop","ondurationchange","onemptied","onended","onerror","onfocus","onformdata","onhashchange","oninput","oninvalid","onkeydown","onkeypress","onkeyup","onlanguagechange","onload","onloadeddata","onloadedmetadata","onloadstart","onmessage","onmessageerror","onmousedown","onmouseenter","onmouseleave","onmousemove","onmouseout","onmouseover","onmouseup","onoffline","ononline","onpagehide","onpageshow","onpaste","onpause","onplay","onplaying","onpopstate","onprogress","onratechange","onreset","onresize","onrejectionhandled","onscroll","onscrollend","onsecuritypolicyviolation","onseeked","onseeking","onselect","onslotchange","onstalled","onstorage","onsubmit","onsuspend","ontimeupdate","ontoggle","onunhandledrejection","onunload","onvolumechange","onwaiting","onwheel"],disallowedTagsMode:"discard",allowedAttributes:{a:["href","name","target"],img:["src","srcset","alt","title","width","height","loading"]},allowedEmptyAttributes:["alt"],selfClosing:["img","br","hr","area","base","basefont","input","link","meta"],allowedSchemes:["http","https","ftp","mailto","tel"],allowedSchemesByTag:{},allowedSchemesAppliedToAttributes:["href","src","cite"],allowProtocolRelative:!0,enforceHtmlBoundary:!1,parseStyleAttributes:!0},E.simpleTransform=function(d,t,w){return w=w===void 0?!0:w,t=t||{},function(l,m){let v;if(w)for(v in t)m[v]=t[v];else m=t;return{tagName:d,attribs:m}}}}}]);

//# sourceMappingURL=https://sourcemaps.squarespace.net/universal/scripts-compressed/sourcemaps/cc731bb655192ff7/66854-638568b7ddbab641-min.en-US.js.map